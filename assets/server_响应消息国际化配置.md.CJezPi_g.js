import{_ as s,c as i,o as a,a2 as e}from"./chunks/framework.YJbRpb8Y.js";const t="/AiHub-Docs/assets/image-20240816211442344.6GKhJkLv.png",_=JSON.parse('{"title":"服务端消息国际化配置","description":"","frontmatter":{},"headers":[],"relativePath":"server/响应消息国际化配置.md","filePath":"server/响应消息国际化配置.md"}'),n={name:"server/响应消息国际化配置.md"},l=e('<h1 id="服务端消息国际化配置" tabindex="-1">服务端消息国际化配置 <a class="header-anchor" href="#服务端消息国际化配置" aria-label="Permalink to &quot;服务端消息国际化配置&quot;">​</a></h1><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><ol><li><p>使用 IDEA 打开 <code>src/main/resources/messages</code> 能看到一个 <strong>Resource Bundle &#39;i18n&#39;</strong></p></li><li><p>打开 <code>i18n.properties</code>，并切换到 Resource Bundle 视图</p><p><img src="'+t+`" alt="image-20240816211442344"></p><ul><li><strong>key 为数字是业务异常，需要有对应的标识码；key 为英文是参数校验异常，用于校验注解引用</strong></li></ul></li><li><p>左上角 + 号可以新增，新增后在右侧可以配置对应语言环境下的消息内容(按顺序默认依次是 默认/英文/中文)</p></li><li><p>(业务异常) 回到代码中，找到 <code>src/main/java/com/aihub/entity/common/BusinessExceptionEnum.java</code> 创建对应的枚举类实例即可</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AUTH_EMAIL_CODE_ERROR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;邮箱验证码错误&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>注意：这里的 <strong>code</strong> 值必须和配置文件中的相同，<strong>message</strong> 就是日志打印用的，给我们自己看到，中文即可</p></li><li><p>(参数校验异常) 在对应的校验注解中，通过在对应 message 属性中，使用 <code>{}</code> 包裹对应的配置文件中的 key 即可</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;{param.email.format}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NotBlank</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;{param.email.empty}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String email;</span></span></code></pre></div></li></ol><h2 id="实现原理" tabindex="-1">实现原理 <a class="header-anchor" href="#实现原理" aria-label="Permalink to &quot;实现原理&quot;">​</a></h2><p>TODO</p>`,5),p=[l];function h(r,o,k,d,c,g){return a(),i("div",null,p)}const u=s(n,[["render",h]]);export{_ as __pageData,u as default};
